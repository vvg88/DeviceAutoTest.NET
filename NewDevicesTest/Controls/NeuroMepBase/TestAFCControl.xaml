<UserControl x:Class="NeuroSoft.DeviceAutoTest.NewDevicesTest.Controls.TestAFCControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:commonControls="clr-namespace:NeuroSoft.DeviceAutoTest.Common.Controls;assembly=NeuroSoft.DeviceAutoTest.Common"
             xmlns:converters="clr-namespace:NeuroSoft.DeviceAutoTest.Common.Converters;assembly=NeuroSoft.DeviceAutoTest.Common">
    <Grid MinHeight="400">        
        <Grid.Resources>
            <Style x:Key="RowHeaderStyle" TargetType="DataGridRowHeader" BasedOn="{StaticResource {x:Type DataGridRowHeader}}">
                <Setter Property="Content" Value="{Binding Header}"/>
            </Style>
            <converters:ScaleConvertor x:Key="VoltToMilliVoltConvertor" Scale="1000"/>            
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Expander ExpandDirection="Left" IsExpanded="True" Header="Мониторинг">
            <Expander.Style>
                <Style TargetType="Expander" BasedOn="{StaticResource {x:Type Expander}}">
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <ContentPresenter Content="{Binding}">
                                    <ContentPresenter.LayoutTransform>
                                        <RotateTransform Angle="-90"/>
                                    </ContentPresenter.LayoutTransform>
                                </ContentPresenter>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Expander.Style>
            <commonControls:MonitoringPlotter x:Name="MonitoringPlotter" MinWidth="500" />
        </Expander>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <DataGrid AutoGenerateColumns="False"  Name="AFCDataGrid" Height="370"
                  ItemsSource="{Binding Rows}" VerticalScrollBarVisibility="Visible"
                  SelectedItem="{Binding CurrentRow}" SelectionChanged="AFCDataGrid_SelectionChanged"                  
                  IsReadOnly="True" RowHeaderStyle="{StaticResource RowHeaderStyle}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Range 1" Binding="{Binding Range0Item.Swing.Value, Mode=OneWay, Converter={StaticResource VoltToMilliVoltConvertor}, StringFormat={}{0:F3} мВ}"
                                    MinWidth="70">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Range0Item.SwingIsValid}" Value="False">
                                        <Setter Property="Background" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Range0Item.SwingIsValid}" Value="True">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Range 2" Binding="{Binding Range1Item.Swing.Value, Mode=OneWay, Converter={StaticResource VoltToMilliVoltConvertor}, StringFormat={}{0:F3} мВ}"
                                    MinWidth="70">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Range1Item.SwingIsValid}" Value="False">
                                        <Setter Property="Background" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Range1Item.SwingIsValid}" Value="True">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Range 3" Binding="{Binding Range2Item.Swing.Value, Mode=OneWay, Converter={StaticResource VoltToMilliVoltConvertor}, StringFormat={}{0:F3} мВ}"
                                    MinWidth="70">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Range2Item.SwingIsValid}" Value="False">
                                        <Setter Property="Background" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Range2Item.SwingIsValid}" Value="True">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Range 4" Binding="{Binding Range3Item.Swing.Value, Mode=OneWay, Converter={StaticResource VoltToMilliVoltConvertor}, StringFormat={}{0:F3} мВ}"
                                    MinWidth="70">
                        <DataGridTextColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Range3Item.SwingIsValid}" Value="False">
                                        <Setter Property="Background" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Range3Item.SwingIsValid}" Value="True">
                                        <Setter Property="Background" Value="LightGreen"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
            <CheckBox IsChecked="{Binding EnablePowerRejector}" Grid.Row="1" Margin="3" Content="Фильтр сетевой помехи"/>
        </Grid>
                
        <TextBlock Grid.Row="1" VerticalAlignment="Center" Text="{Binding TestingStatus}"
                   FontWeight="Bold"/>        
        <Button Grid.Row="1" HorizontalAlignment="Right"
                Grid.Column="1" Margin="5" Click="Button_Click"
                MinWidth="60">
            <Button.Style>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Content" Value="Начать"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsTesting}" Value="True">
                            <Setter Property="Content" Value="Остановить"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding SettingParams}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</UserControl>
